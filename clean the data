# Load packagses, making sure they're installed first

library(BBmisc)# nice normalize function
library(purrr)
library(C50)
library(psych)
library(neuralnet)
library(dplyr)
library(pdp)
library(gmodels)
library(randomForest)
library(caret)
library(lubridate)
library(pacman)
library(MASS)
library(ROCR)
library(lift)
library(stringr)
library(nnet)
library(mltools)
library(data.table)
library(readr)
library(magrittr)

ISMS <- read_csv("ISMSDataset1.csv")

head(ISMS)
tail(ISMS)
str(ISMS)
summary(ISMS)
describe(ISMS)


# Drop observations for which we don't have the label
ISMS <- ISMS[!is.na(ISMS$RETURN_IND),] 


# Factors, converting character to factor
ISMS$CATEGORY_DESCRIPTION <- as.factor(ISMS$CATEGORY_DESCRIPTION)
ISMS$SUB_CATEGORY_DESCRIPTION <- as.factor(ISMS$SUB_CATEGORY_DESCRIPTION)
ISMS$TRANSACTION_TYPE_DESCRIPTION <- as.factor(ISMS$TRANSACTION_TYPE_DESCRIPTION)
ISMS$RETURN_IND <- as.factor(ISMS$RETURN_IND)
ISMS$CHILDERN_PRESENCE <- as.factor(ISMS$CHILDERN_PRESENCE)
ISMS$RETURN_IND <- as.factor(ISMS$RETURN_IND)
ISMS$GENDER_H_HEAD <- as.factor(ISMS$GENDER_H_HEAD)
ISMS$GENDER_INDIVIDUAL <- as.factor(ISMS$GENDER_INDIVIDUAL)

describe(ISMS)
summary(ISMS)
#DATE convertion
ISMS$TRANSACTION_DATE<-  as.Date(ISMS$TRANSACTION_DATE, format = "%d%b%Y:%H:%M:%S") 
ISMS$TRANSACTION_DATE <- as.character(ISMS$TRANSACTION_DATE)

# Write function to deal with missing values

fixNAs <- function(data_frame){
  
  # Define what we want to replace "NA" with, depending on type
  integer_reac <- 0
  factor_reac <- "FIXED_NA"
  character_reac <- "FIXED_NA"
  date_reac <- as.Date("1900-01-01")
 
  #Loop through columns in the data frame to apply reactions
  
  for (i in 1:ncol(data_frame)) { # walk through column by column
    if (class(data_frame[,i]) %in% c("numeric","integer")) {
      if(any(is.na(data_frame[,i]))){
        data_frame[,paste0(colnames(data_frame)[i],"_surrogate")] <- 
          as.factor(ifelse(is.na(data_frame[,i]),"1","0"))
        data_frame[is.na(data_frame[,i]),i] <- integer_reac
      }#if any NA - numeric or integer
    } else # if not numeric or integer
      
      if (class(data_frame[,i]) %in% c("factor")) {
        if (any(is.na(data_frame[,i]))){
          data_frame[,i] <- as.character(data_frame[,i])
          data_frame[,paste0(colnames(data_frame)[i],"_surrogate")] <- 
            as.factor(ifelse(is.na(data_frame[,i]),"1","0"))
          data_frame[is.na(data_frame[,i]),i] <- factor_reac
          data_frame[,i] <- as.factor(data_frame[,i])
          
        } # if any NAs - factor
      } else { # if not numeric integer or factor
        if (class(data_frame[,i]) %in% c("character")) {
          if (any(is.na(data_frame[,i]))) {
            data_frame[,paste0(colnames(data_frame)[i],"_surrogate")] <- 
              as.factor(ifelse(is.na(data_frame[,i]),"1","0"))
            data_frame[is.na(data_frame[,i]),i] <- character_reac
          } #if any NA in characters
        } else { # if not character, numeric, integer or factor, must be date 
          if(class(data_frame[,i]) %in% c("Date")) {
            if (any(is.na(data_frame[,i]))) {
              data_frame[,paste0(colnames(data_frame)[i],"_surrogate")] <- 
                as.factor(ifelse(is.na(data_frame[,i]),"1","0"))
              data_frame[is.na(data_frame[,i]),i] <- date_reac
            } #if NA in dates
          } #if Date
        }
      } 
  } #for loop
  return(as.data.frame(data_frame))
} # fixNAs function

# Write function that identifies sparse categories and aggregates into "other"

combineRare <- function(data_frame,mincount){ #mincount is threshold below which we consider it "rare"
  for (i in 1:ncol(data_frame)){
    a <- data_frame[,i] #go through column by column
    replace <- names(which(table(a) < mincount)) #creating table to find those below mincount
    levels(a)[levels(a) %in% replace] <- paste("Other",colnames(data_frame)[i],sep=".")
    data_frame[,i] <- a 
  } # main for loop
  return(data_frame)
} #combineRare 


table(ISMS$CATEGORY_DESCRIPTION)
table(ISMS$SUB_CATEGORY_DESCRIPTION)
table(ISMS$AGE_H_HEAD)
#Apply functions

ISMS <- fixNAs(ISMS)
summary(ISMS)
ISMS <- combineRare(ISMS,10)

#professor solution
#create the year variable
ISMS$TRANSACTION_DATE_YEAR <- year(ISMS$TRANSACTION_DATE)
ISMS_sample<-ISMS %>% group_by(HOUSEHOLD_ID)%>% summarise(
  purch98_02 = length(TRANSACTION_NBR[TRANSACTION_DATE_YEAR==1998|TRANSACTION_DATE_YEAR==1999|TRANSACTION_DATE_YEAR==2000|TRANSACTION_DATE_YEAR==2001|TRANSACTION_DATE_YEAR==2002]),
  purch_03 = length(TRANSACTION_NBR[TRANSACTION_DATE_YEAR==2003]),  
  purch_04 = length(TRANSACTION_NBR[TRANSACTION_DATE_YEAR==2004]))
#merge the two dataset
ISMS_sample<- merge(ISMS,ISMS_sample,by="HOUSEHOLD_ID")
#create retention to identify whether the household retain in 2003 & 2004
ISMS_sample$retained <-NA
ISMS_sample$retained [ISMS_sample$purch_03>0 &ISMS_sample$purch_04>0]=1
ISMS_sample$retained [ISMS_sample$purch_03==0 |ISMS_sample$purch_04==0]=0
